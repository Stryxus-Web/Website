<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@inject HttpClient Http

@inject AssetCaches AC
@inject UIState UI
@inject NavigationManager Navigation

@code 
{
    protected override async Task OnParametersSetAsync()
    {
        UI.SetPageContexts(new List<UIState.PageContext>()
        {
            new UIState.PageContext
            {
                Name = "Home",
                RelativeLink = "/",
                IconName = "home",
                RelativeNavbarImageURLs = new object[] { AC.Asset("/img/home/back_main.avif") }
            },
            new UIState.PageContext
            {
                Name = "Blog",
                RelativeLink = "/blog",
                IconName = "newspaper"
            },
            new UIState.PageContext
            {
                Name = "Projects",
                RelativeLink = "/projects",
                IconName = "code"
            },
            new UIState.PageContext
            {
                Name = "Gaming",
                RelativeLink = "/gaming",
                IconName = "joystick"
            },
            new UIState.PageContext
            {
                Name = "Setups",
                RelativeLink = "/setups",
                IconName = "pci-card"
            },
            new UIState.PageContext
            {
                Name = "Media",
                RelativeLink = "/media",
                IconName = "camera-fill",
                RelativeNavbarImageURLs = new object[]
                {
                    AC.Asset("/img/media/background-0.avif"),
                    AC.Asset("/img/media/background-1.avif"),
                    AC.Asset("/img/media/background-2.avif"),
                    AC.Asset("/img/media/background-3.avif"),
                    AC.Asset("/img/media/background-4.avif"),
                    AC.Asset("/img/media/background-5.avif"),
                }
            },
            new UIState.PageContext
            {
                Name = "Art",
                RelativeLink = "/art",
                IconName = "brush-fill"
            },
            new UIState.PageContext
            {
                Name = "Health",
                RelativeLink = "/health",
                IconName = "heart-pulse-fill"
            },
            new UIState.PageContext
            {
                Name = "Music",
                RelativeLink = "/music",
                IconName = "music-note-beamed"
            },
        });
        Uri navURI = new(Navigation.Uri);
        try
        {
            if (Navigation.Uri == Navigation.BaseUri || !UI.PageContexts.Any(o => o.RelativeLink == navURI.AbsolutePath)) UI.CurrentPageContext = UI.PageContexts?.First(x => x.RelativeLink == "/");
            else
            {
                UIState.PageContext newConext = UI.PageContexts.First(x => x.RelativeLink == navURI.AbsolutePath);
                if (!UI.PageIsTransitioning && !UI.CurrentPageContext.Equals(newConext)) UI.CurrentPageContext = newConext;
            }
        }
        catch { Navigation.NavigateTo(string.Empty); }
        await base.OnParametersSetAsync();
    }
}
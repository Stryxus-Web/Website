<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@inject UIState UI
@inject NavigationManager Navigation

@code 
{
    protected override Task OnInitializedAsync()
    {
        UI.SetPageContexts(new List<UIState.PageContext>()
        {
            new UIState.PageContext
            {
                Name = "Home",
                RelativeLink = "/",
                IconName = "home",
                RelativeNavbarImageURLs = new object[] { "./img/home/background-0.avif" }
            },
            new UIState.PageContext
            {
                Name = "Blog",
                RelativeLink = "/blog",
                IconName = "newspaper"
            },
            new UIState.PageContext
            {
                Name = "Projects",
                RelativeLink = "/projects",
                IconName = "code"
            },
            new UIState.PageContext
            {
                Name = "Media",
                RelativeLink = "/media",
                IconName = "camera",
                RelativeNavbarImageURLs = new object[] 
                { 
                    "./img/media/background-0.avif", 
                    "./img/media/background-1.avif",
                    "./img/media/background-2.avif",
                    "./img/media/background-3.avif",
                    "./img/media/background-4.avif",
                    "./img/media/background-5.avif"
                }
            },
            new UIState.PageContext
            {
                Name = "Gaming",
                RelativeLink = "/gaming",
                IconName = "joystick"
            },
            new UIState.PageContext
            {
                Name = "Setups",
                RelativeLink = "/setups",
                IconName = "pci-card"
            }
        });
        Uri navURI = new(Navigation.Uri);
        try
        {
            if (Navigation.Uri == Navigation.BaseUri || !UI.PageContexts.Any(o => o.RelativeLink == navURI.AbsolutePath)) UI.CurrentPageContext = UI.PageContexts?.First(x => x.RelativeLink == "/");
            else
            {
                UIState.PageContext newConext = UI.PageContexts.First(x => x.RelativeLink == navURI.AbsolutePath);
                if (!UI.PageIsTransitioning && !UI.CurrentPageContext.Equals(newConext)) UI.CurrentPageContext = newConext;
            }
        }
        catch { Navigation.NavigateTo(string.Empty); }
        return base.OnInitializedAsync();
    }
}
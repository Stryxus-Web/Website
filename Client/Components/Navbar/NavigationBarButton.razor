<div class="row align-items-center nav-button@(UI.CurrentPageContext?.RelativeLink == RelativeLink ? " active" : string.Empty) @(UI.PageIsTransitioning ? "disabled" : string.Empty)" @onclick="ChangePage">
    <div class="col">
        <div class="row icon-container">
            <div class="col">
                <i class="bi bi-@(IconName)"></i>
            </div>
        </div>
        <div class="row justify-content-center bullet-container">
            <div class="col-auto">
                <small class="active-bullet">&bull;</small>
            </div>
        </div>
    </div>
</div>

@inject UIState UI

@code 
{
    [Parameter, EditorRequired]
    public string? Title { get; set; }

    [Parameter, EditorRequired]
    public string? RelativeLink { get; set; }

    [Parameter, EditorRequired]
    public string? IconName { get; set; }

    protected override Task OnInitializedAsync() 
    {
        UI.OnPageIsTransitioningChange += StateHasChanged;
        return base.OnInitializedAsync();
    }

    public void ChangePage() => UI.CurrentPageContext = UI.PageContexts?.First(x => x.RelativeLink == RelativeLink);

}

@inherits LayoutComponentBase

<NavigationBar>
    @if (UI.PageContexts is not null)
    {
        @foreach (UIState.PageContext c in UI.PageContexts.GetRange(1, UI.PageContexts.Count - 1))
        {
            <NavigationBarButton Title="@c.Name" RelativeLink="@c.RelativeLink" IconName="@c.IconName" />
        }
    }
</NavigationBar>
<BodyContainer>
    @Body
</BodyContainer>
<div id="page-transitioner">
    <LoadingCircle />
</div>

@inject IJSRuntime JS
@inject UIState UI

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (UI.CurrentPageContext.RelativeNavbarImageURLs is not null && UI.CurrentPageContext.RelativeNavbarImageURLs?.Length is not 0)
            {
                await JS.InvokeVoidAsync("navigationBar.animator.setNavbarBackground", JsonConvert.SerializeObject(UI.CurrentPageContext.RelativeNavbarImageURLs));
            }
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    protected override Task OnInitializedAsync()
    {
        UI.OnPageIsTransitioningChange += () => { InvokeAsync(StateHasChanged); };
        return base.OnInitializedAsync();
    }
}